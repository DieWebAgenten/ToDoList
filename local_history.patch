Index: app/src/main/java/com/example/TodoList/LbsGeocodingActivity.java
===================================================================
--- app/src/main/java/com/example/TodoList/LbsGeocodingActivity.java	(revision )
+++ app/src/main/java/com/example/TodoList/LbsGeocodingActivity.java	(revision )
@@ -1,82 +0,0 @@
-package com.example.TodoList;
-
-import android.app.Activity;
-import android.content.Context;
-import android.location.Location;
-import android.location.LocationListener;
-import android.location.LocationManager;
-import android.os.Bundle;
-import android.util.Log;
-import android.view.View;
-import android.view.View.OnClickListener;
-import android.view.ViewGroup;
-import android.widget.Button;
-import android.widget.TextView;
-import android.widget.Toast;
-
-
-public class LbsGeocodingActivity extends Activity {
-    private static final long MINIMUM_DISTANCE_CHANGE_FOR_UPDATES = 1; // in Meters
-    private static final long MINIMUM_TIME_BETWEEN_UPDATES = 1000; // in Milliseconds
-    protected LocationManager locationManager;
-    protected Button retrieveLocationButton;
-
-    @Override
-    public void onCreate(Bundle savedInstanceState) {
-        Log.d("GeoCodingActivity", "Entered LbsGeocodingActivity");
-        super.onCreate(savedInstanceState);
-        setContentView(R.layout.activity_show_location);
-    }
-
-
-    public void showCurrentLocation() {
-        retrieveLocationButton = (Button) findViewById(R.id.retrieve_location_button);
-        Log.d("location_button", "retrieve_location_button found");
-        locationManager = (LocationManager) getSystemService(Context.LOCATION_SERVICE);
-        locationManager.requestLocationUpdates(
-                LocationManager.GPS_PROVIDER,
-                MINIMUM_TIME_BETWEEN_UPDATES,
-                MINIMUM_DISTANCE_CHANGE_FOR_UPDATES,
-                new MyLocationListener()
-        );
-
-        Location location = locationManager.getLastKnownLocation(LocationManager.GPS_PROVIDER);
-        if (location != null) {
-            String message = String.format(
-                    "Current Location \n Longitude: %1$s \n Latitude: %2$s",
-                    location.getLongitude(), location.getLatitude()
-            );
-            Toast.makeText(LbsGeocodingActivity.this, message,
-                    Toast.LENGTH_LONG).show();
-        }
-
-    }
-
-    private class MyLocationListener implements LocationListener {
-
-        public void onLocationChanged(Location location) {
-            String message = String.format(
-                    "New Location \n Longitude: %1$s \n Latitude: %2$s",
-                    location.getLongitude(), location.getLatitude()
-            );
-            Toast.makeText(LbsGeocodingActivity.this, message, Toast.LENGTH_LONG).show();
-        }
-
-        public void onStatusChanged(String s, int i, Bundle b) {
-            Toast.makeText(LbsGeocodingActivity.this, "Provider status changed",
-                    Toast.LENGTH_LONG).show();
-        }
-
-        public void onProviderDisabled(String s) {
-            Toast.makeText(LbsGeocodingActivity.this,
-                    "Provider disabled by the user. GPS turned off",
-                    Toast.LENGTH_LONG).show();
-        }
-
-        public void onProviderEnabled(String s) {
-            Toast.makeText(LbsGeocodingActivity.this,
-                    "Provider enabled by the user. GPS turned on",
-                    Toast.LENGTH_LONG).show();
-        }
-    }
-}
Index: app/src/main/java/com/example/TodoList/GeoWebViewActivity.java
===================================================================
--- app/src/main/java/com/example/TodoList/GeoWebViewActivity.java	(revision )
+++ app/src/main/java/com/example/TodoList/GeoWebViewActivity.java	(revision )
@@ -1,75 +0,0 @@
-package com.example.TodoList;
-
-import android.app.Activity;
-import android.os.Bundle;
-import android.webkit.GeolocationPermissions;
-import android.webkit.WebChromeClient;
-import android.webkit.WebView;
-import android.webkit.WebViewClient;
-
-import com.example.TodoList.R;
-
-/**
- * A minimal WebView app with HTML5 geolocation capability
- *
- * @author David M. Chandler
- */
-public class GeoWebViewActivity extends Activity {
-
-    /**
-     * WebViewClient subclass loads all hyperlinks in the existing WebView
-     */
-    public class GeoWebViewClient extends WebViewClient {
-        @Override
-        public boolean shouldOverrideUrlLoading(WebView view, String url) {
-            // When user clicks a hyperlink, load in the existing WebView
-            view.loadUrl(url);
-            return true;
-        }
-    }
-
-    /**
-     * WebChromeClient subclass handles UI-related calls
-     * Note: think chrome as in decoration, not the Chrome browser
-     */
-    public class GeoWebChromeClient extends WebChromeClient {
-        @Override
-        public void onGeolocationPermissionsShowPrompt(String origin,
-                                                       GeolocationPermissions.Callback callback) {
-            // Always grant permission since the app itself requires location
-            // permission and the user has therefore already granted it
-            callback.invoke(origin, true, false);
-        }
-    }
-
-    WebView mWebView;
-
-    /** Called when the activity is first created. */
-    @Override
-    public void onCreate(Bundle savedInstanceState) {
-        super.onCreate(savedInstanceState);
-        setContentView(R.layout.main);
-        mWebView = (WebView) findViewById(R.id.webView1);
-        // Brower niceties -- pinch / zoom, follow links in place
-        mWebView.getSettings().setJavaScriptCanOpenWindowsAutomatically(true);
-        mWebView.getSettings().setBuiltInZoomControls(true);
-        mWebView.setWebViewClient(new GeoWebViewClient());
-        // Below required for geolocation
-        mWebView.getSettings().setJavaScriptEnabled(true);
-        mWebView.getSettings().setGeolocationEnabled(true);
-        mWebView.setWebChromeClient(new GeoWebChromeClient());
-        // Load google.com
-        mWebView.loadUrl("http://www.google.com");
-    }
-
-    @Override
-    public void onBackPressed() {
-        // Pop the browser back stack or exit the activity
-        if (mWebView.canGoBack()) {
-            mWebView.goBack();
-        }
-        else {
-            super.onBackPressed();
-        }
-    }
-}
\ No newline at end of file
Index: app/src/main/java/com/example/TodoList/GPSTracker.java
===================================================================
--- app/src/main/java/com/example/TodoList/GPSTracker.java	(revision )
+++ app/src/main/java/com/example/TodoList/GPSTracker.java	(revision )
@@ -1,202 +0,0 @@
-package com.example.TodoList;
-
-import android.app.AlertDialog;
-import android.app.Service;
-import android.content.Context;
-import android.content.DialogInterface;
-import android.content.Intent;
-import android.location.Location;
-import android.location.LocationListener;
-import android.location.LocationManager;
-import android.os.Bundle;
-import android.os.IBinder;
-import android.provider.Settings;
-import android.util.Log;
-
-public class GPSTracker extends Service implements LocationListener {
-
-    private final Context mContext;
-
-    // flag for GPS status
-    boolean isGPSEnabled = false;
-
-    // flag for network status
-    boolean isNetworkEnabled = false;
-
-    // flag for GPS status
-    boolean canGetLocation = false;
-
-    Location location; // location
-    double latitude; // latitude
-    double longitude; // longitude
-
-    // The minimum distance to change Updates in meters
-    private static final long MIN_DISTANCE_CHANGE_FOR_UPDATES = 10; // 10 meters
-
-    // The minimum time between updates in milliseconds
-    private static final long MIN_TIME_BW_UPDATES = 1000 * 60 * 1; // 1 minute
-
-    // Declaring a Location Manager
-    protected LocationManager locationManager;
-
-    public GPSTracker(Context context) {
-        this.mContext = context;
-        getLocation();
-    }
-
-    public Location getLocation() {
-        try {
-            locationManager = (LocationManager) mContext
-                    .getSystemService(LOCATION_SERVICE);
-
-            // getting GPS status
-            isGPSEnabled = locationManager
-                    .isProviderEnabled(LocationManager.GPS_PROVIDER);
-
-            // getting network status
-            isNetworkEnabled = locationManager
-                    .isProviderEnabled(LocationManager.NETWORK_PROVIDER);
-
-            if (!isGPSEnabled && !isNetworkEnabled) {
-                // no network provider is enabled
-            } else {
-                this.canGetLocation = true;
-                // First get location from Network Provider
-                if (isNetworkEnabled) {
-                    locationManager.requestLocationUpdates(
-                            LocationManager.NETWORK_PROVIDER,
-                            MIN_TIME_BW_UPDATES,
-                            MIN_DISTANCE_CHANGE_FOR_UPDATES, this);
-                    Log.d("Network", "Network");
-                    if (locationManager != null) {
-                        location = locationManager
-                                .getLastKnownLocation(LocationManager.NETWORK_PROVIDER);
-                        if (location != null) {
-                            latitude = location.getLatitude();
-                            longitude = location.getLongitude();
-                        }
-                    }
-                }
-                // if GPS Enabled get lat/long using GPS Services
-                if (isGPSEnabled) {
-                    if (location == null) {
-                        locationManager.requestLocationUpdates(
-                                LocationManager.GPS_PROVIDER,
-                                MIN_TIME_BW_UPDATES,
-                                MIN_DISTANCE_CHANGE_FOR_UPDATES, this);
-                        Log.d("GPS Enabled", "GPS Enabled");
-                        if (locationManager != null) {
-                            location = locationManager
-                                    .getLastKnownLocation(LocationManager.GPS_PROVIDER);
-                            if (location != null) {
-                                latitude = location.getLatitude();
-                                longitude = location.getLongitude();
-                            }
-                        }
-                    }
-                }
-            }
-
-        } catch (Exception e) {
-            e.printStackTrace();
-        }
-
-        return location;
-    }
-
-    /**
-     * Stop using GPS listener
-     * Calling this function will stop using GPS in your app
-     * */
-    public void stopUsingGPS(){
-        if(locationManager != null){
-            locationManager.removeUpdates(GPSTracker.this);
-        }
-    }
-
-    /**
-     * Function to get latitude
-     * */
-    public double getLatitude(){
-        if(location != null){
-            latitude = location.getLatitude();
-        }
-
-        // return latitude
-        return latitude;
-    }
-
-    /**
-     * Function to get longitude
-     * */
-    public double getLongitude(){
-        if(location != null){
-            longitude = location.getLongitude();
-        }
-
-        // return longitude
-        return longitude;
-    }
-
-    /**
-     * Function to check GPS/wifi enabled
-     * @return boolean
-     * */
-    public boolean canGetLocation() {
-        return this.canGetLocation;
-    }
-
-    /**
-     * Function to show settings alert dialog
-     * On pressing Settings button will lauch Settings Options
-     * */
-    public void showSettingsAlert(){
-        AlertDialog.Builder alertDialog = new AlertDialog.Builder(mContext);
-
-        // Setting Dialog Title
-        alertDialog.setTitle("GPS is settings");
-
-        // Setting Dialog Message
-        alertDialog.setMessage("GPS is not enabled. Do you want to go to settings menu?");
-
-        // On pressing Settings button
-        alertDialog.setPositiveButton("Settings", new DialogInterface.OnClickListener() {
-            public void onClick(DialogInterface dialog,int which) {
-                Intent intent = new Intent(Settings.ACTION_LOCATION_SOURCE_SETTINGS);
-                mContext.startActivity(intent);
-            }
-        });
-
-        // on pressing cancel button
-        alertDialog.setNegativeButton("Cancel", new DialogInterface.OnClickListener() {
-            public void onClick(DialogInterface dialog, int which) {
-                dialog.cancel();
-            }
-        });
-
-        // Showing Alert Message
-        alertDialog.show();
-    }
-
-    @Override
-    public void onLocationChanged(Location location) {
-    }
-
-    @Override
-    public void onProviderDisabled(String provider) {
-    }
-
-    @Override
-    public void onProviderEnabled(String provider) {
-    }
-
-    @Override
-    public void onStatusChanged(String provider, int status, Bundle extras) {
-    }
-
-    @Override
-    public IBinder onBind(Intent arg0) {
-        return null;
-    }
-
-}
\ No newline at end of file
Index: app/src/main/java/com/example/TodoList/LocationActivity.java
===================================================================
--- app/src/main/java/com/example/TodoList/LocationActivity.java	(revision )
+++ app/src/main/java/com/example/TodoList/LocationActivity.java	(revision )
@@ -1,118 +0,0 @@
-package com.example.TodoList;
-
-import android.app.Activity;
-import android.app.Activity;
-import android.content.Context;
-import android.content.Intent;
-import android.location.Criteria;
-import android.location.Location;
-import android.location.LocationListener;
-import android.location.LocationManager;
-import android.os.Bundle;
-import android.provider.Settings;
-import android.view.View;
-import android.view.View.OnClickListener;
-import android.widget.Button;
-import android.widget.CheckBox;
-import android.widget.TextView;
-import android.widget.Toast;
-
-import com.example.TodoList.LocationActivity;
-import com.example.TodoList.R;
-
-public class LocationActivity extends Activity {
-    private TextView latitude;
-    private TextView longitude;
-    private TextView choice;
-    private CheckBox fineAcc;
-    private Button choose;
-    private TextView provText;
-    private LocationManager locationManager;
-    private String provider;
-    private MyLocationListener mylistener;
-    private Criteria criteria;
-            /** Called when the activity is first created. */
-    @Override
-    public void onCreate(Bundle savedInstanceState) {
-        super.onCreate(savedInstanceState);
-        setContentView(R.layout.activity_location);
-        latitude = (TextView) findViewById(R.id.lat);
-        longitude = (TextView) findViewById(R.id.lon);
-        provText = (TextView) findViewById(R.id.prov);
-        choice = (TextView) findViewById(R.id.choice);
-        fineAcc = (CheckBox) findViewById(R.id.fineAccuracy);
-        choose = (Button) findViewById(R.id.chooseRadio);
-        // Get the location manager
-        locationManager = (LocationManager) getSystemService(Context.LOCATION_SERVICE);
-        // Define the criteria how to select the location provider
-        criteria = new Criteria();
-        criteria.setAccuracy(Criteria.ACCURACY_COARSE);   //default
-        // user defines the criteria
-        choose.setOnClickListener(new OnClickListener() {
-            @Override
-
-            public void onClick(View v) {
-                // TODO Auto-generated method stub
-                if (fineAcc.isChecked()) {
-                    criteria.setAccuracy(Criteria.ACCURACY_FINE);
-                    choice.setText("fine accuracy selected");
-                } else {
-                    criteria.setAccuracy(Criteria.ACCURACY_COARSE);
-                    choice.setText("coarse accuracy selected");
-                }
-            }
-        });
-        criteria.setCostAllowed(false);
-        // get the best provider depending on the criteria
-        provider = locationManager.getBestProvider(criteria, false);
-        // the last known location of this provider
-        Location location = locationManager.getLastKnownLocation(provider);
-        mylistener = new MyLocationListener();
-        if (location != null) {
-            mylistener.onLocationChanged(location);
-        } else {
-            // leads to the settings because there is no last known location
-            Intent intent = new Intent(Settings.ACTION_LOCATION_SOURCE_SETTINGS);
-            startActivity(intent);
-        }
-        // location updates: at least 1 meter and 200millsecs change
-        locationManager.requestLocationUpdates(provider, 200, 1, mylistener);
-    }
-
-    private class MyLocationListener implements LocationListener {
-        @Override
-
-        public void onLocationChanged(Location location) {
-            // Initialize the location fields
-            latitude.setText("Latitude: " + String.valueOf(location.getLatitude()));
-            longitude.setText("Longitude: " + String.valueOf(location.getLongitude()));
-            provText.setText(provider + " provider has been selected.");
-
-            Toast.makeText(LocationActivity.this, "Location changed!",
-                    Toast.LENGTH_SHORT).show();
-        }
-
-        @Override
-
-        public void onStatusChanged(String provider, int status, Bundle extras) {
-            Toast.makeText(LocationActivity.this, provider + "'s status changed to " + status + "!",
-                    Toast.LENGTH_SHORT).show();
-        }
-
-        @Override
-
-        public void onProviderEnabled(String provider) {
-            Toast.makeText(LocationActivity.this, "Provider " + provider + " enabled!",
-                    Toast.LENGTH_SHORT).show();
-
-        }
-
-        @Override
-
-        public void onProviderDisabled(String provider) {
-            Toast.makeText(LocationActivity.this, "Provider " + provider + " disabled!",
-                    Toast.LENGTH_SHORT).show();
-        }
-    }
-
-}
\ No newline at end of file
Index: app/src/main/java/com/example/TodoList/GeoActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/TodoList/GeoActivity.java	(revision )
+++ app/src/main/java/com/example/TodoList/GeoActivity.java	(revision )
@@ -2,6 +2,7 @@
 
 import android.content.Context;
 import android.location.Location;
+import android.location.LocationListener;
 import android.location.LocationManager;
 import android.os.Bundle;
 import android.app.Activity;
@@ -9,8 +10,7 @@
 import android.widget.Toast;
 
 
-
-    public class MainActivity extends Activity {
+public class GeoActivity extends Activity {
         @Override
         public void onCreate(Bundle savedInstanceState) {
             super.onCreate(savedInstanceState);
@@ -20,26 +20,29 @@
             lm.requestLocationUpdates(LocationManager.GPS_PROVIDER, 0, 0, ll);
         }
 
-        private class mylocationlistener implements LocationListener {
-            @Override
-            public void onLocationChanged(Location location) {
-                if (location != null) {
-                    Log.d("LOCATION CHANGED", location.getLatitude() + "");
-                    Log.d("LOCATION CHANGED", location.getLongitude() + "");
+    private class mylocationlistener implements LocationListener {
+        @Override
+        public void onLocationChanged(Location location) {
+            if (location != null) {
+                Log.d("LOCATION CHANGED", location.getLatitude() + "");
+                Log.d("LOCATION CHANGED", location.getLongitude() + "");
-                    Toast.makeText(MainActivity.this,
+                Toast.makeText(GeoActivity.this,
-                            location.getLatitude() + "" + location.getLongitude(),
-                            Toast.LENGTH_LONG).show();
-                }
-            }
-            @Override
-            public void onProviderDisabled(String provider) {
-            }
-            @Override
-            public void onProviderEnabled(String provider) {
-            }
-            @Override
-            public void onStatusChanged(String provider, int status, Bundle extras) {
-            }
-        }
+                        location.getLatitude() + "" + location.getLongitude(),
+                        Toast.LENGTH_LONG).show();
+            }
+        }
+        @Override
+        public void onProviderDisabled(String provider) {
+        }
+        @Override
+        public void onProviderEnabled(String provider) {
+        }
+        @Override
+        public void onStatusChanged(String provider, int status, Bundle extras) {
+        }
+    }
+
+
+
-    }
+}
 
Index: app/src/main/java/com/example/TodoList/MainActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/TodoList/MainActivity.java	(revision )
+++ app/src/main/java/com/example/TodoList/MainActivity.java	(revision )
@@ -9,6 +9,8 @@
 import android.content.Intent;
 import android.database.Cursor;
 import android.database.sqlite.SQLiteDatabase;
+import android.location.Location;
+import android.location.LocationListener;
 import android.location.LocationManager;
 import android.net.Uri;
 import android.os.Bundle;
@@ -140,6 +142,7 @@
 			startActivity(intent);
 			finish();
 	}
+
 
 	public void onGeoLocationButtonClick(View view) {
 		LocationManager lm = (LocationManager) getSystemService(Context.LOCATION_SERVICE);
Index: app/src/main/AndroidManifest.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/AndroidManifest.xml	(revision )
+++ app/src/main/AndroidManifest.xml	(revision )
@@ -13,7 +13,7 @@
     <uses-permission android:name="android.permission.READ_PROFILE" />
     <uses-permission android:name="android.permission.READ_CONTACTS" />
     <uses-permission android:name="android.permission.INTERNET" />
-    <uses-permission android:name="android.permission.ACCESS_COARSE_LOCATION" />
+    <uses-permission android:name="android.permission.ACCESS_FINE_LOCATION" />
     <uses-permission android:name="android.permission.WRITE_EXTERNAL_STORAGE" />
     <uses-permission android:name="android.permission.READ_PHONE_STATE" />
     <uses-permission android:name="android.permission.READ_EXTERNAL_STORAGE" />
@@ -32,15 +32,7 @@
 
             <category android:name="android.intent.category.LAUNCHER" />
         </activity>
-        <activity
-            android:name=".LocationActivity"
-            android:label="@string/app_name" >
-            <intent-filter>
-                <action android:name="android.intent.action.MAIN" />
 
-                <category android:name="android.intent.category.ALTERNATIVE" />
-            </intent-filter>
-        </activity>
         <activity
             android:name=".MainActivity"
             android:label="@string/app_name" >
@@ -49,18 +41,6 @@
             <category android:name="android.intent.category.ALTERNATIVE" />
         </activity>
 
-        <!--
-        <activity
-            android:name=".GeoWebViewActivity"
-            android:label="@string/app_name"
-            android:theme="@android:style/Theme.NoTitleBar" >
-        </activity>
-        -->
-        <activity
-            android:name=".LbsGeocodingActivity"
-            android:configChanges="orientation|keyboardHidden|screenSize"
-            android:label="@string/title_activity_show_location" >
-        </activity>
         <activity
             android:name=".GeoActivity"
             android:label="@string/title_activity_geo" >
